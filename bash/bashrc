export PATH=$HOME/local/bin:$PATH
export PRINTER=ps4430bnb
export EDITOR=vim

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
  LIGHT_GREEN="\[\033[0;32m\]"
  CYAN="\[\033[0;36m\]"
  if [ `/bin/hostname -s` = "hod" ] ; then
    export hcolor=$LIGHT_GREEN
  else
    export hcolor="\[\e[38;5;$((48 + $(hostname | cksum | cut -c1-3) % 170))m\]"
  fi
  PS1="$hcolor\h\[\033[00m\]:\w\$ "
else
  PS1='${debian_chroot:+($debian_chroot)}\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# ls aliases
alias ls='ls --color=auto'
alias ll='ls -l --ignore=*.pyc'

################
# PYTHON STUFF #
################
export PYTHONPATH=$HOME/local/lib/python2.6/site-packages:$PYTHONPATH

if [ -f "$HOME/local/bin/virtualenvwrapper.sh" ]; then
    source $HOME/local/bin/virtualenvwrapper.sh
fi

# pip bash completion
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip
# pip bash completion end

# set PYTHONSTARTUP
export PYTHONSTARTUP=$HOME/.pythonrc


# hostname completion
# from: http://www.commandlinefu.com/commands/view/2766/ssh-autocomplete
complete -W "$(echo $(grep '^ssh ' ~/.bash_history | sort -u | sed 's/^ssh //'))" ssh
# hostname completion end

# easy unpacking
unp() {
  if [ x == x$1 ]; then
    echo 'usage: unp [filename]'
  elif [ -f "$1" ]; then
    case "$1" in
      *.tar.gz) tar xvzf "$1" ;;
      *.tgz) tar xvzf "$1" ;;
      *.tar.bz2) tar xvjf "$1" ;;
      *.gz) gunzip "$1" ;;
      *.bz2) bunzip2 "$1" ;;
      *.tar) tar zvf "$1" ;;
      *.zip|*.egg|*.jar) unzip "$1" ;;
      *) echo "'$1' is an unknown archive" ;;
    esac
  else
    echo "'$1' is not a valid archive"
  fi
}

# database connections
alias db_xls='psql -U bteitler -h sametsrv01 xls'
alias db_ontu='psql -U bteitler -h sametdb_ontuition -p 54324 Ontuition'

export PERL5LIB=$HOME/local/lib/perl5:$HOME/local/lib/perl5/site_perl:$PERL5LIB
export PERL5LIB=$HOME/local/lib64/perl5:$HOME/local/lib64/perl5/site_perl:$PERL5LIB
export HISTIGNORE="&:ls:ls -l"

# hadoop-specific commands
#export PATH=$PATH:/fs/sand/xls/hadoop/hadoop/bin

# NS2-specific commands
#NSHOME=$HOME/temp/ns-allinone-2.34
#export PATH=$PATH:$NSHOME/bin:$NSHOME/tcl8.4.18/unix:$NSHOME/tk8.4.18/unix
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$NSHOME/otcl-1.13:$NSHOME/lib
#export TCL_LIBRARY=$NSHOME/tcl8.4.18/library

# eclipse-specific commands
export PATH=/opt/stow/eclipse-jee-galileo-SR1-linux-gtk-x86_64:$PATH
