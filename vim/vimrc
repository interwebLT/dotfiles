syntax on
filetype plugin indent on

":hi LineNr ctermfg=darkgreen
":hi Comment ctermfg=darkgreen

set tabstop=2
set shiftwidth=2
set autoindent
set expandtab
set cursorline
set smarttab
set smartindent
set visualbell
set title
set titleold="Terminal"
set number
set showcmd

set wrap
set textwidth=75

" from Armin Ronacher's .vimrc:
" http://github.com/mitsuhiko/dotfiles/blob/master/vim/vimrc
" sets leader to ','
let mapleader=","

" customize the wildmenu
set wildmenu
set wildignore=*.o,*.pyc,*.bak,*.jpg,*.jpeg,*.png,*.giv
set wildmode=list:full

" hide matches on <leader>space
nnoremap <leader><space> :nohlsearch<cr>

" quit window on <leader>q
nnoremap <leader>q :q<CR>

" Set working directory
nnoremap <leader>. :lcd %:p:h<CR>

" Easy fileType switching
nnoremap <leader>Tp :set ft=python<CR>
nnoremap <leader>Th :set ft=html<CR>

" Make the command line two lines high and change the statusline display to
" something that looks useful.
set cmdheight=2
set laststatus=2
"set statusline=[%l,%v\ %P%M]\ %f\ %r%h%w\ (%{&ff})
set showcmd

" keep more lines for scope
set scrolloff=4

" better search
set hlsearch
set incsearch

" Highlight trailing whitespace
" from http://stackoverflow.com/a/356214/145988
match Todo /\s\+$/

" Highlight non-ascii characters (i.e., outside the range from ' ' (space)
" to tilde
match Todo /[^\ -~]/

" Remove trailing whitespace on save (for source files)
" from http://stackoverflow.com/q/356126
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd FileType c,cpp,java,javascript,php,python,rst,ruby,tex,text autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

" choose the right filetype for html-ish files
fun! s:SelectHTML()
  let n = 1
  while n < 50 && n < line("$")
    " check for jinja
    if getline(n) =~ '{%\s*\(extends\|block\|macro\|set\|if\|for\|include\|trans\)\>'
      set ft=htmljinja
      return
    endif
    " check for mako
    "  if getline(n) =~ '<%\(def\|inherit\)'
    "    set ft=mako
    "    return
    "  endif
    " check for genshi
    "  if getline(n) =~ 'xmlns:py\|py:\(match\|for\|if\|def\|strip\|xmlns\)'
    "    set ft=genshi
    "    return
    "  endif
    let n = n + 1
  endwhile
  " go with html
  set ft=html
endfun

autocmd FileType html,xhtml,xml,htmljinja setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
autocmd BufNewFile,BufRead *.html,*.htm call s:SelectHTML()
let html_no_rendering=1

au BufNewFile,BufRead *.wsgi setf python
au FileType css setlocal tabstop=4
au FileType java setlocal tabstop=8
au FileType vim setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2
au FileType tex setlocal textwidth=80 nosmartindent
au FileType text setlocal nosmartindent
